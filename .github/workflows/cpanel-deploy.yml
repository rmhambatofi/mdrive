name: Flask CI/CD pour CPanel

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest

  deploy:
    # needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3
    
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    
    - name: Create deployment package
      run: |
        # Installation des dépendances
        pip install -r requirements.txt --target ./package
        
        # Copie du code source
        cp -r *.py ./package/ || true
        cp -r templates ./package/ || true
        cp -r static ./package/ || true
        
        # Création du fichier passenger_wsgi.py si ce n'est pas déjà fait
        if [ ! -f package/passenger_wsgi.py ]; then
          echo 'import sys, os
          INTERP = os.path.join(os.environ["HOME"], "virtualenv/mdrive/3.11/bin/python")
          if sys.executable != INTERP:
            os.execl(INTERP, INTERP, *sys.argv)
          from app import app as application' > package/passenger_wsgi.py
        fi
        
        # Création de l'archive
        cd package && zip -r ../deployment.zip .
    
    - name: Deploy to CPanel
      run: |
        scp deployment.zip ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
          rm -rf ~/mdrive
          mkdir -p ~/mdrive
          unzip ~/deployment.zip -d ~/mdrive
          rm ~/deployment.zip
          cd ~/mdrive
          python -m venv ~/virtualenv/mdrive/3.11/
          source ~/virtualenv/mdrive/3.11/bin/activate
          pip install -r requirements.txt
          # Redémarrage de l'application via cPanel (si nécessaire)
        '